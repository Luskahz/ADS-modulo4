/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package br.com.bank.view;

import br.com.bank.dao.AccountDAO;
import br.com.bank.exceptions.InsufficientBalanceException;
import br.com.bank.exceptions.InvalidInputException;
import br.com.bank.model.Account;
import br.com.bank.model.Bank;
import br.com.bank.service.AccountService;
import br.com.bank.service.BankService;
import br.com.bank.stategy.enumstrategy.AccountListStatesStrategy;
import br.com.bank.stategy.enumstrategy.FeeStrategy;
import java.io.IOException;
import java.math.BigDecimal;
import javax.swing.JOptionPane;

/**
 *
 * @author cg3034186
 */
public final class EditAccountGUI extends javax.swing.JDialog {

    private final Bank bank;
    private final ListAccountsGUI list;
    public AccountListStatesStrategy statesList;
    private final Account account;
    private final AccountService accountService;
    private final BankService bankService;

    public EditAccountGUI(java.awt.Frame parent, boolean modal, Account account, Bank bank, BankService bankService, AccountService accountService, ListAccountsGUI list, AccountListStatesStrategy statesList) {
        super(parent, modal);
        this.bank = bank;
        this.account = account;
        this.bankService = bankService;
        this.accountService = accountService;
        this.list = list;
        this.statesList = statesList;
        jComboBox1 = new javax.swing.JComboBox<>();
        initComponents();
        setLocationRelativeTo(null);
        initializer();

    }

    public void initializer() {
        accountIdTxt.setText(String.valueOf(account.getId()));
        holderTxt.setText(String.valueOf(account.getHolder()));
        atualBalanceTxt.setText(String.valueOf(account.getBalance()));
        typeAccountTxt.setText(String.valueOf(account.getTaxationStrategy().name()));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(
                java.util.Arrays.stream(FeeStrategy.values())
                        .map(Enum::name)
                        .toArray(String[]::new)
        ));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        Header = new javax.swing.JPanel();
        VoltarBtn = new javax.swing.JButton();
        Center = new javax.swing.JPanel();
        Editcontainer = new javax.swing.JPanel();
        accountInformationsPanel = new javax.swing.JPanel();
        accountInformationsHeader = new javax.swing.JPanel();
        accountInformationsLabel = new javax.swing.JLabel();
        accountInformationsContent = new javax.swing.JPanel();
        accountIdLabel = new javax.swing.JLabel();
        atualBalanceLabel = new javax.swing.JLabel();
        holderLabel = new javax.swing.JLabel();
        holderTxt = new javax.swing.JTextArea();
        accountIdTxt = new javax.swing.JTextArea();
        atualBalanceTxt = new javax.swing.JTextArea();
        ExcluirContaBtn = new javax.swing.JButton();
        typeAccountLabel = new javax.swing.JLabel();
        typeAccountTxt = new javax.swing.JTextArea();
        operationsInAccountPanel = new javax.swing.JPanel();
        withdrawPanel = new javax.swing.JPanel();
        withdrawHeader = new javax.swing.JPanel();
        withdrawLabel = new javax.swing.JLabel();
        withdrawContent = new javax.swing.JPanel();
        insertAmountLabel = new javax.swing.JLabel();
        withdrawAmountTxt = new javax.swing.JTextField();
        withdrawConfirmBtn = new javax.swing.JButton();
        depositPanel = new javax.swing.JPanel();
        depositHeader = new javax.swing.JPanel();
        depositLabel = new javax.swing.JLabel();
        depositContent = new javax.swing.JPanel();
        depositAmountLabel = new javax.swing.JLabel();
        depositAmountTxt = new javax.swing.JTextField();
        depositConfirmBtn = new javax.swing.JButton();
        TaxPanel = new javax.swing.JPanel();
        TaxHeader = new javax.swing.JPanel();
        taxLabel = new javax.swing.JLabel();
        TaxContent = new javax.swing.JPanel();
        typeTaxLabel = new javax.swing.JLabel();
        taxConfirmBtn = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        TransactionContainer = new javax.swing.JPanel();
        TransactionHeader = new javax.swing.JPanel();
        titleTranactionLabel = new javax.swing.JLabel();
        withdrawHeader1 = new javax.swing.JPanel();
        TransactionTitleLabel = new javax.swing.JLabel();
        insertAccountIdLabel1 = new javax.swing.JPanel();
        insertAmountLabel1 = new javax.swing.JLabel();
        TransactionIdAccountTxt = new javax.swing.JTextField();
        TransactionConfirmBtn1 = new javax.swing.JButton();
        TransactionAmountTxt = new javax.swing.JTextField();
        insertAmountLabel2 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Header.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 10));

        VoltarBtn.setText("Voltar");
        VoltarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VoltarBtnActionPerformed(evt);
            }
        });
        Header.add(VoltarBtn);

        getContentPane().add(Header, java.awt.BorderLayout.PAGE_START);

        Center.setLayout(new java.awt.GridLayout(2, 2));

        Editcontainer.setLayout(new java.awt.GridLayout(1, 0));

        accountInformationsPanel.setLayout(new java.awt.BorderLayout());

        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 30, 5);
        flowLayout1.setAlignOnBaseline(true);
        accountInformationsHeader.setLayout(flowLayout1);

        accountInformationsLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        accountInformationsLabel.setText("Account Informations:");
        accountInformationsHeader.add(accountInformationsLabel);

        accountInformationsPanel.add(accountInformationsHeader, java.awt.BorderLayout.PAGE_START);

        accountIdLabel.setText("Account ID:");

        atualBalanceLabel.setText("Atual Balance");

        holderLabel.setText("Holder");

        holderTxt.setEditable(false);
        holderTxt.setColumns(20);
        holderTxt.setRows(5);
        holderTxt.setEnabled(false);

        accountIdTxt.setEditable(false);
        accountIdTxt.setColumns(20);
        accountIdTxt.setRows(5);
        accountIdTxt.setEnabled(false);

        atualBalanceTxt.setEditable(false);
        atualBalanceTxt.setColumns(20);
        atualBalanceTxt.setRows(5);
        atualBalanceTxt.setEnabled(false);

        ExcluirContaBtn.setText("Excluir Conta");
        ExcluirContaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcluirContaBtnActionPerformed(evt);
            }
        });

        typeAccountLabel.setText("Type Account");

        typeAccountTxt.setEditable(false);
        typeAccountTxt.setColumns(20);
        typeAccountTxt.setRows(5);
        typeAccountTxt.setEnabled(false);

        javax.swing.GroupLayout accountInformationsContentLayout = new javax.swing.GroupLayout(accountInformationsContent);
        accountInformationsContent.setLayout(accountInformationsContentLayout);
        accountInformationsContentLayout.setHorizontalGroup(
            accountInformationsContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accountInformationsContentLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(accountInformationsContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ExcluirContaBtn)
                    .addGroup(accountInformationsContentLayout.createSequentialGroup()
                        .addGroup(accountInformationsContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(accountInformationsContentLayout.createSequentialGroup()
                                .addGroup(accountInformationsContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(accountIdLabel)
                                    .addComponent(holderLabel))
                                .addGap(20, 20, 20))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, accountInformationsContentLayout.createSequentialGroup()
                                .addComponent(atualBalanceLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(accountInformationsContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(holderTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(accountIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(atualBalanceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, accountInformationsContentLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(typeAccountLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(typeAccountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        accountInformationsContentLayout.setVerticalGroup(
            accountInformationsContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accountInformationsContentLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(accountInformationsContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accountIdLabel)
                    .addComponent(accountIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(accountInformationsContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(holderLabel)
                    .addComponent(holderTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(accountInformationsContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(atualBalanceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(atualBalanceLabel))
                .addGap(18, 18, 18)
                .addGroup(accountInformationsContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(typeAccountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(typeAccountLabel))
                .addGap(18, 18, 18)
                .addComponent(ExcluirContaBtn)
                .addContainerGap(93, Short.MAX_VALUE))
        );

        accountInformationsPanel.add(accountInformationsContent, java.awt.BorderLayout.CENTER);

        Editcontainer.add(accountInformationsPanel);

        operationsInAccountPanel.setLayout(new java.awt.GridLayout(3, 0));

        withdrawPanel.setLayout(new java.awt.BorderLayout());

        withdrawHeader.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        withdrawLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        withdrawLabel.setText("Withdraw");
        withdrawHeader.add(withdrawLabel);

        withdrawPanel.add(withdrawHeader, java.awt.BorderLayout.PAGE_START);

        insertAmountLabel.setText("Insert Amount");

        withdrawConfirmBtn.setText("Withdraw");
        withdrawConfirmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withdrawConfirmBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout withdrawContentLayout = new javax.swing.GroupLayout(withdrawContent);
        withdrawContent.setLayout(withdrawContentLayout);
        withdrawContentLayout.setHorizontalGroup(
            withdrawContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(withdrawContentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(withdrawContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(withdrawContentLayout.createSequentialGroup()
                        .addComponent(insertAmountLabel)
                        .addGap(18, 18, 18)
                        .addComponent(withdrawAmountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(withdrawConfirmBtn))
                .addContainerGap())
        );
        withdrawContentLayout.setVerticalGroup(
            withdrawContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(withdrawContentLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(withdrawContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertAmountLabel)
                    .addComponent(withdrawAmountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(withdrawConfirmBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        withdrawPanel.add(withdrawContent, java.awt.BorderLayout.CENTER);

        operationsInAccountPanel.add(withdrawPanel);

        depositPanel.setLayout(new java.awt.BorderLayout());

        depositHeader.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        depositLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        depositLabel.setText("Deposit");
        depositHeader.add(depositLabel);

        depositPanel.add(depositHeader, java.awt.BorderLayout.PAGE_START);

        depositAmountLabel.setText("Insert Amount");

        depositConfirmBtn.setText("Deposit");
        depositConfirmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depositConfirmBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout depositContentLayout = new javax.swing.GroupLayout(depositContent);
        depositContent.setLayout(depositContentLayout);
        depositContentLayout.setHorizontalGroup(
            depositContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(depositContentLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(depositContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(depositContentLayout.createSequentialGroup()
                        .addComponent(depositAmountLabel)
                        .addGap(18, 18, 18)
                        .addComponent(depositAmountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(depositConfirmBtn))
                .addContainerGap())
        );
        depositContentLayout.setVerticalGroup(
            depositContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(depositContentLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(depositContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(depositAmountLabel)
                    .addComponent(depositAmountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(depositConfirmBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        depositPanel.add(depositContent, java.awt.BorderLayout.CENTER);

        operationsInAccountPanel.add(depositPanel);

        TaxPanel.setLayout(new java.awt.BorderLayout());

        TaxHeader.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        taxLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        taxLabel.setText("Tax");
        TaxHeader.add(taxLabel);

        TaxPanel.add(TaxHeader, java.awt.BorderLayout.PAGE_START);

        typeTaxLabel.setText("Select Fee type:");

        taxConfirmBtn.setText("Apply");
        taxConfirmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taxConfirmBtnActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TaxContentLayout = new javax.swing.GroupLayout(TaxContent);
        TaxContent.setLayout(TaxContentLayout);
        TaxContentLayout.setHorizontalGroup(
            TaxContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TaxContentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TaxContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TaxContentLayout.createSequentialGroup()
                        .addComponent(typeTaxLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(TaxContentLayout.createSequentialGroup()
                        .addGap(0, 319, Short.MAX_VALUE)
                        .addComponent(taxConfirmBtn)))
                .addContainerGap())
        );
        TaxContentLayout.setVerticalGroup(
            TaxContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TaxContentLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(TaxContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeTaxLabel)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(taxConfirmBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TaxPanel.add(TaxContent, java.awt.BorderLayout.CENTER);

        operationsInAccountPanel.add(TaxPanel);

        Editcontainer.add(operationsInAccountPanel);

        Center.add(Editcontainer);

        TransactionContainer.setLayout(new java.awt.BorderLayout());

        TransactionHeader.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        titleTranactionLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        titleTranactionLabel.setText("Deposit for an other account");
        TransactionHeader.add(titleTranactionLabel);

        TransactionContainer.add(TransactionHeader, java.awt.BorderLayout.PAGE_START);

        withdrawHeader1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        TransactionTitleLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        TransactionTitleLabel.setText("Deposit for other account");
        withdrawHeader1.add(TransactionTitleLabel);

        TransactionContainer.add(withdrawHeader1, java.awt.BorderLayout.PAGE_START);

        insertAmountLabel1.setText("Insert the Account number:");

        TransactionIdAccountTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TransactionIdAccountTxtActionPerformed(evt);
            }
        });

        TransactionConfirmBtn1.setText("Deposit");
        TransactionConfirmBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TransactionConfirmBtn1ActionPerformed(evt);
            }
        });

        insertAmountLabel2.setText("Insert an amount to deposit");

        javax.swing.GroupLayout insertAccountIdLabel1Layout = new javax.swing.GroupLayout(insertAccountIdLabel1);
        insertAccountIdLabel1.setLayout(insertAccountIdLabel1Layout);
        insertAccountIdLabel1Layout.setHorizontalGroup(
            insertAccountIdLabel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insertAccountIdLabel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(insertAccountIdLabel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(insertAccountIdLabel1Layout.createSequentialGroup()
                        .addComponent(insertAmountLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TransactionIdAccountTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, insertAccountIdLabel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(TransactionConfirmBtn1))
                    .addGroup(insertAccountIdLabel1Layout.createSequentialGroup()
                        .addComponent(insertAmountLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TransactionAmountTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 606, Short.MAX_VALUE)))
                .addContainerGap())
        );
        insertAccountIdLabel1Layout.setVerticalGroup(
            insertAccountIdLabel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insertAccountIdLabel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(insertAccountIdLabel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertAmountLabel1)
                    .addComponent(TransactionIdAccountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(insertAccountIdLabel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertAmountLabel2)
                    .addComponent(TransactionAmountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TransactionConfirmBtn1)
                .addContainerGap(164, Short.MAX_VALUE))
        );

        TransactionContainer.add(insertAccountIdLabel1, java.awt.BorderLayout.CENTER);

        Center.add(TransactionContainer);

        getContentPane().add(Center, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void VoltarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VoltarBtnActionPerformed
        list.initializer(statesList);
        dispose();
    }//GEN-LAST:event_VoltarBtnActionPerformed

    private void withdrawConfirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withdrawConfirmBtnActionPerformed
        double amount = Double.parseDouble(withdrawAmountTxt.getText());

        try {
            accountService.withdraw(account, bank, amount, bankService);
            initializer();
        } catch (InsufficientBalanceException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Insuficient Balance Error", JOptionPane.ERROR_MESSAGE);
        } catch (InvalidInputException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Value Error", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "File Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_withdrawConfirmBtnActionPerformed

    private void depositConfirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depositConfirmBtnActionPerformed
        double amount = Double.parseDouble(depositAmountTxt.getText());
        try {
            accountService.deposit(account, bank, amount, bankService);
            initializer();
        } catch (InvalidInputException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Value Error", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "File Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_depositConfirmBtnActionPerformed

    private void ExcluirContaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcluirContaBtnActionPerformed
        try {
            bankService.removeAccount(bank, accountService.getId(account));
        } catch (InvalidInputException e) {
            JOptionPane.showMessageDialog(
                    null,
                    "we can't remove this account, try again later" + e.getMessage(),
                    "Run error",
                    JOptionPane.ERROR_MESSAGE
            );
        }
        dispose();
        list.initializer(statesList);
    }//GEN-LAST:event_ExcluirContaBtnActionPerformed

    private void TransactionConfirmBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TransactionConfirmBtn1ActionPerformed
        Account receiver_account = null;
        try {
            receiver_account = bankService.searchAccount(bank, Integer.parseInt(TransactionIdAccountTxt.getText()));
        } catch (InvalidInputException ex) {
            JOptionPane.showMessageDialog(
                    null,
                    "we can't find the bank in the operation, try again later..." + ex.getMessage(),
                    "Run error",
                    JOptionPane.ERROR_MESSAGE
            );
        }
        try {
            boolean result = accountService.transfer(
                    account,
                    receiver_account,
                    new BigDecimal(TransactionAmountTxt.getText())
            );
            if (result == true) {
                JOptionPane.showMessageDialog(
                        null,
                        "transaction is done!!",
                        "Transaction",
                        JOptionPane.DEFAULT_OPTION
                );
                bankService.refreshBankFromdb(bank);
                initializer();
                list.initializer(statesList);

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(
                    null,
                    "we can't do the transaction... " + e.getMessage(),
                    "Transaction error",
                    JOptionPane.ERROR_MESSAGE
            );

        }

    }//GEN-LAST:event_TransactionConfirmBtn1ActionPerformed

    private void TransactionIdAccountTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TransactionIdAccountTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TransactionIdAccountTxtActionPerformed

    private void taxConfirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taxConfirmBtnActionPerformed
        String selected = (String) jComboBox1.getSelectedItem();
        if (selected == null) {
            JOptionPane.showMessageDialog(this, "Select a fee type first.");
            return;
        }

        try {
            FeeStrategy strategy = FeeStrategy.valueOf(selected);

            double fee = strategy.calculateFee(account.getBalance());
            double previousBalance = account.getBalance();
            double newBalance = previousBalance - fee;

            // 1. Atualiza no banco
            boolean dbOk = accountService.getAccountDAO().updateBalance(account, newBalance);

            if (!dbOk) {
                JOptionPane.showMessageDialog(this,
                        "Could not apply fee in database.",
                        "Database Error",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            // 2. Insere no extrato
            bankService.getBankDAO().insertStatement(
                    account.getId(),
                    "FEE_" + strategy.name(),
                    "Fee applied: " + strategy.name() + " ($" + fee + ")",
                    previousBalance,
                    newBalance
            );

            // 3. Atualiza em memória
            account.setBalance(newBalance);

            // 4. Atualiza GUI
            initializer();

            JOptionPane.showMessageDialog(this,
                    "Fee applied: " + strategy.name()
                    + "\nDiscounted: $" + fee
                    + "\nNew balance: $" + newBalance,
                    "Fee Applied",
                    JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Error applying fee: " + e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_taxConfirmBtnActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Center;
    private javax.swing.JPanel Editcontainer;
    private javax.swing.JButton ExcluirContaBtn;
    private javax.swing.JPanel Header;
    private javax.swing.JPanel TaxContent;
    private javax.swing.JPanel TaxHeader;
    private javax.swing.JPanel TaxPanel;
    private javax.swing.JTextField TransactionAmountTxt;
    private javax.swing.JButton TransactionConfirmBtn1;
    private javax.swing.JPanel TransactionContainer;
    private javax.swing.JPanel TransactionHeader;
    private javax.swing.JTextField TransactionIdAccountTxt;
    private javax.swing.JLabel TransactionTitleLabel;
    private javax.swing.JButton VoltarBtn;
    private javax.swing.JLabel accountIdLabel;
    private javax.swing.JTextArea accountIdTxt;
    private javax.swing.JPanel accountInformationsContent;
    private javax.swing.JPanel accountInformationsHeader;
    private javax.swing.JLabel accountInformationsLabel;
    private javax.swing.JPanel accountInformationsPanel;
    private javax.swing.JLabel atualBalanceLabel;
    private javax.swing.JTextArea atualBalanceTxt;
    private javax.swing.JLabel depositAmountLabel;
    private javax.swing.JTextField depositAmountTxt;
    private javax.swing.JButton depositConfirmBtn;
    private javax.swing.JPanel depositContent;
    private javax.swing.JPanel depositHeader;
    private javax.swing.JLabel depositLabel;
    private javax.swing.JPanel depositPanel;
    private javax.swing.JLabel holderLabel;
    private javax.swing.JTextArea holderTxt;
    private javax.swing.JPanel insertAccountIdLabel1;
    private javax.swing.JLabel insertAmountLabel;
    private javax.swing.JLabel insertAmountLabel1;
    private javax.swing.JLabel insertAmountLabel2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel operationsInAccountPanel;
    private javax.swing.JButton taxConfirmBtn;
    private javax.swing.JLabel taxLabel;
    private javax.swing.JLabel titleTranactionLabel;
    private javax.swing.JLabel typeAccountLabel;
    private javax.swing.JTextArea typeAccountTxt;
    private javax.swing.JLabel typeTaxLabel;
    private javax.swing.JTextField withdrawAmountTxt;
    private javax.swing.JButton withdrawConfirmBtn;
    private javax.swing.JPanel withdrawContent;
    private javax.swing.JPanel withdrawHeader;
    private javax.swing.JPanel withdrawHeader1;
    private javax.swing.JLabel withdrawLabel;
    private javax.swing.JPanel withdrawPanel;
    // End of variables declaration//GEN-END:variables
}
